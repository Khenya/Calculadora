name: Build and Deploy Android App

on:
  workflow_dispatch:
    inputs:
      release_notes:
        type: string
        required: true
        default: "New Android Release"
        description: "Release notes for the build"

jobs:
  build-and-deploy:
    name: Build and Deploy Android App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Install project dependencies
        run: npm install

      - name: Authenticate and configure EAS
        run: |
          eas project:init --non-interactive --force
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build APK/AAB
        run: |
          eas build --platform android --profile production
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Fetch build artifact
        run: |
          mkdir -p dist
          ARTIFACTS=$(eas build:list --platform android --status finished --json)
          echo "Build list JSON: $ARTIFACTS"
          ARTIFACT_URL=$(echo "$ARTIFACTS" | jq -r '.[0].artifacts.buildUrl')
          if [ -z "$ARTIFACT_URL" ]; then
            echo "Error: No valid artifact URL found"
            exit 1
          fi
          echo "Downloading artifact from $ARTIFACT_URL"
          curl -o dist/app.apk "$ARTIFACT_URL"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: dist/app.apk
          releaseNotes: ${{ inputs.release_notes }}
